@model PagedList.IPagedList<NPORT.Models.Database.News>
@section Title { News }
@using PagedList.Mvc;
@using Transliteration;
@{
    string blockClass = "right";
}

@Styles.Render( "~/Content/css/PagedList.css" )

<h1>News</h1>
@if (Model != null)
{
    @Html.RouteLink( "Sort by title", "Home", new { sortOrder = "Title" }, new { @class = "btn" } );
    @Html.RouteLink( "Sort by date", "Home", new { sortOrder = "Date" }, new { @class = "btn right" } );
    <br />

    foreach (var news in Model)
    {
        if (news.Visible || news.GetAuthorName() == User.Identity.Name || User.IsInRole( "Admin" ) || User.IsInRole( "Editor" ))
        {
            if (blockClass == "right")
            { blockClass = "left"; }
            else
            { blockClass = "right"; }

            <div class="news @blockClass">
                <h2 class="title">@Html.Raw( news.Title )</h2>
                <p class="content">@Html.Raw( news.ShortInfo )</p>
                <p class="details-link">@Html.RouteLink( "Details", "News Details", new { newsTitle = Transliteration.Front(news.Title), newsId = news.Id  }, new { @class = "btn" } )</p>   
                <span class="author">&copy; @news.GetAuthorName()</span>
                <span class="date">@news.Date </span>
            </div>
        }
    }

    <br />
    <div class="pager">
    <span class="pager">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>

    @Html.PagedListPager( Model, page => Url.Action( "Index", new { page, sortOrder = TempData["OrderBy"] } ) )

    </div>
}
else
{
    <p class="no-news">We don't have news for you :c</p>
}